{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loading: false,\n  cities: [],\n  user: {},\n  getCitiesLoading: false,\n  loggingIn: false,\n  signingIn: false\n};\n\nconst users = (state = initialState, action) => {\n  var _action$payload, _action$payload$citie;\n\n  switch (action.type) {\n    case actionTypes.GET_CITIES_REQUEST:\n      return { ...state,\n        getCitiesLoading: true\n      };\n\n    case actionTypes.GET_CITIES_FAILED:\n      return { ...state,\n        getCitiesLoading: false\n      };\n\n    case actionTypes.GET_CITIES_SUCCESS:\n      return { ...state,\n        getCitiesLoading: false,\n        cities: action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : (_action$payload$citie = _action$payload.cities) === null || _action$payload$citie === void 0 ? void 0 : _action$payload$citie.data\n      };\n\n    case actionTypes.LOGIN_REQUEST:\n      return { ...state,\n        loggingIn: true\n      };\n\n    case actionTypes.LOGIN_FAILED:\n      return { ...state,\n        loggingIn: false\n      };\n\n    case actionTypes.LOGIN_SUCCESS:\n      return { ...state,\n        loggingIn: true,\n        currentUser: action.payload.user\n      };\n\n    case actionTypes.SIGNUP_REQUEST:\n      return { ...state,\n        signingIn: true\n      };\n\n    case actionTypes.SIGNUP_FAILED:\n      return { ...state,\n        signingIn: false\n      };\n\n    case actionTypes.SIGNUP_SUCCESS:\n      return { ...state,\n        signingIn: true\n      };\n\n    default:\n      return { ...state,\n        loading: false\n      };\n  }\n};\n\nexport default users;","map":{"version":3,"sources":["/Users/vaibhavgurnani/Downloads/testTask/Client/src/reducers/users.js"],"names":["actionTypes","initialState","loading","cities","user","getCitiesLoading","loggingIn","signingIn","users","state","action","type","GET_CITIES_REQUEST","GET_CITIES_FAILED","GET_CITIES_SUCCESS","payload","data","LOGIN_REQUEST","LOGIN_FAILED","LOGIN_SUCCESS","currentUser","SIGNUP_REQUEST","SIGNUP_FAILED","SIGNUP_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,gBAAgB,EAAE,KAJC;AAKnBC,EAAAA,SAAS,EAAE,KALQ;AAMnBC,EAAAA,SAAS,EAAE;AANQ,CAArB;;AASA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAACR,YAAP,EAAqBS,MAArB,KAAgC;AAAA;;AAE5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,WAAW,CAACY,kBAAjB;AACG,aAAO,EAAC,GAAGH,KAAJ;AAAWJ,QAAAA,gBAAgB,EAAE;AAA7B,OAAP;;AAEH,SAAKL,WAAW,CAACa,iBAAjB;AACE,aAAO,EAAC,GAAGJ,KAAJ;AAAWJ,QAAAA,gBAAgB,EAAE;AAA7B,OAAP;;AAEF,SAAKL,WAAW,CAACc,kBAAjB;AACE,aAAO,EAAC,GAAGL,KAAJ;AAAWJ,QAAAA,gBAAgB,EAAE,KAA7B;AAAoCF,QAAAA,MAAM,EAAEO,MAAF,aAAEA,MAAF,0CAAEA,MAAM,CAAEK,OAAV,6EAAE,gBAAiBZ,MAAnB,0DAAE,sBAAyBa;AAArE,OAAP;;AAEH,SAAKhB,WAAW,CAACiB,aAAjB;AACG,aAAO,EAAC,GAAGR,KAAJ;AAAWH,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AAEH,SAAKN,WAAW,CAACkB,YAAjB;AACC,aAAO,EAAC,GAAGT,KAAJ;AAAWH,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AAEA,SAAKN,WAAW,CAACmB,aAAjB;AACE,aAAO,EAAC,GAAGV,KAAJ;AAAWH,QAAAA,SAAS,EAAE,IAAtB;AAA4Bc,QAAAA,WAAW,EAAEV,MAAM,CAACK,OAAP,CAAeX;AAAxD,OAAP;;AAEF,SAAKJ,WAAW,CAACqB,cAAjB;AACG,aAAO,EAAC,GAAGZ,KAAJ;AAAWF,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AAEH,SAAKP,WAAW,CAACsB,aAAjB;AACE,aAAO,EAAC,GAAGb,KAAJ;AAAWF,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AAEF,SAAKP,WAAW,CAACuB,cAAjB;AACE,aAAO,EAAC,GAAGd,KAAJ;AAAWF,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AAEF;AACE,aAAO,EAAC,GAAGE,KAAJ;AAAWP,QAAAA,OAAO,EAAE;AAApB,OAAP;AA7BJ;AA+BD,CAjCD;;AAmCA,eAAeM,KAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n  loading: false,\n  cities: [],\n  user: {},\n  getCitiesLoading: false,\n  loggingIn: false,\n  signingIn: false,\n};\n\nconst users = (state=initialState, action) => {\n\n  switch(action.type){\n    case actionTypes.GET_CITIES_REQUEST:\n       return {...state, getCitiesLoading: true}\n\n    case actionTypes.GET_CITIES_FAILED:\n      return {...state, getCitiesLoading: false}\n\n    case actionTypes.GET_CITIES_SUCCESS:\n      return {...state, getCitiesLoading: false, cities: action?.payload?.cities?.data}\n\n  \tcase actionTypes.LOGIN_REQUEST:\n  \t   return {...state, loggingIn: true}\n\n  \tcase actionTypes.LOGIN_FAILED:\n  \t\treturn {...state, loggingIn: false}\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {...state, loggingIn: true, currentUser: action.payload.user}\n\n    case actionTypes.SIGNUP_REQUEST:\n       return {...state, signingIn: true}\n\n    case actionTypes.SIGNUP_FAILED:\n      return {...state, signingIn: false}\n\n    case actionTypes.SIGNUP_SUCCESS:\n      return {...state, signingIn: true}\n\n    default: \n      return {...state, loading: false} \n  }  \n}\n\nexport default users\n\n"]},"metadata":{},"sourceType":"module"}